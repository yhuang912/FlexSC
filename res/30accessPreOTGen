JAVA PROFILE 1.0.1, created Tue Feb 17 17:54:11 2015

Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

  - Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

  - Neither the name of Oracle nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=5000016f, id = 200001, name="main", group="main")
THREAD END (id = 200001)
THREAD START (obj=5000016f, id = 200004, name="DestroyJavaVM", group="main")
THREAD END (id = 200004)
TRACE 300261:
	java.net.SocketInputStream.socketRead0(SocketInputStream.java:Unknown line)
	java.net.SocketInputStream.read(SocketInputStream.java:152)
	java.net.SocketInputStream.read(SocketInputStream.java:122)
	java.io.BufferedInputStream.fill(BufferedInputStream.java:235)
	java.io.BufferedInputStream.read1(BufferedInputStream.java:275)
	java.io.BufferedInputStream.read(BufferedInputStream.java:334)
	network.Server.readBytes(Server.java:54)
	network.Server.readBytes(Server.java:63)
	network.RWBigInteger.readBI(RWBigInteger.java:26)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:112)
TRACE 300286:
	java.math.BigInteger.bitLength(BigInteger.java:2404)
	java.math.BigInteger.intLength(BigInteger.java:2994)
	java.math.BigInteger.setBit(BigInteger.java:2298)
	ot.BitMatrix.NaiveTranspose(BitMatrix.java:54)
	ot.BitMatrix.transpose(BitMatrix.java:28)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:140)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
TRACE 300281:
	java.math.BigInteger.getInt(BigInteger.java:3017)
	java.math.BigInteger.setBit(BigInteger.java:2301)
	ot.BitMatrix.NaiveTranspose(BitMatrix.java:54)
	ot.BitMatrix.transpose(BitMatrix.java:28)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:140)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
TRACE 300385:
	java.net.SocketInputStream.socketRead0(SocketInputStream.java:Unknown line)
	java.net.SocketInputStream.read(SocketInputStream.java:152)
	java.net.SocketInputStream.read(SocketInputStream.java:122)
	java.io.BufferedInputStream.fill(BufferedInputStream.java:235)
	java.io.BufferedInputStream.read1(BufferedInputStream.java:275)
	java.io.BufferedInputStream.read(BufferedInputStream.java:334)
	network.Server.readBytes(Server.java:54)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:74)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
TRACE 300403:
	java.net.SocketInputStream.socketRead0(SocketInputStream.java:Unknown line)
	java.net.SocketInputStream.read(SocketInputStream.java:152)
	java.net.SocketInputStream.read(SocketInputStream.java:122)
	java.io.BufferedInputStream.fill(BufferedInputStream.java:235)
	java.io.BufferedInputStream.read1(BufferedInputStream.java:275)
	java.io.BufferedInputStream.read(BufferedInputStream.java:334)
	network.Server.readBytes(Server.java:54)
	gc.GCSignal.receive(GCSignal.java:81)
	gc.GCGenComp.outputToAlice(GCGenComp.java:129)
	gc.GCGenComp.outputToAlice(GCGenComp.java:167)
TRACE 300321:
	ot.BitMatrix.NaiveTranspose(BitMatrix.java:54)
	ot.BitMatrix.transpose(BitMatrix.java:28)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:140)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
TRACE 300074:
	java.net.PlainSocketImpl.socketAccept(PlainSocketImpl.java:Unknown line)
	java.net.AbstractPlainSocketImpl.accept(AbstractPlainSocketImpl.java:398)
	java.net.ServerSocket.implAccept(ServerSocket.java:530)
	java.net.ServerSocket.accept(ServerSocket.java:498)
	network.Server.listen(Server.java:26)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:59)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300285:
	ot.BitMatrix.NaiveTranspose(BitMatrix.java:52)
	ot.BitMatrix.transpose(BitMatrix.java:28)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:140)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
TRACE 300298:
	sun.security.provider.SHA.implDigest(SHA.java:98)
	sun.security.provider.DigestBase.engineDigest(DigestBase.java:173)
	sun.security.provider.DigestBase.engineDigest(DigestBase.java:152)
	java.security.MessageDigest$Delegate.engineDigest(MessageDigest.java:576)
	java.security.MessageDigest.digest(MessageDigest.java:353)
	ot.Cipher.getPadding(Cipher.java:94)
	ot.Cipher.enc(Cipher.java:84)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:149)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
TRACE 300299:
	sun.security.provider.SHA.implDigest(SHA.java:98)
	sun.security.provider.DigestBase.engineDigest(DigestBase.java:173)
	sun.security.provider.DigestBase.engineDigest(DigestBase.java:152)
	java.security.MessageDigest$Delegate.engineDigest(MessageDigest.java:576)
	java.security.MessageDigest.digest(MessageDigest.java:353)
	ot.Cipher.getPadding(Cipher.java:94)
	ot.Cipher.enc(Cipher.java:84)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:146)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
TRACE 300312:
	java.net.SocketInputStream.socketRead0(SocketInputStream.java:Unknown line)
	java.net.SocketInputStream.read(SocketInputStream.java:152)
	java.net.SocketInputStream.read(SocketInputStream.java:122)
	java.io.BufferedInputStream.fill(BufferedInputStream.java:235)
	java.io.BufferedInputStream.read1(BufferedInputStream.java:275)
	java.io.BufferedInputStream.read(BufferedInputStream.java:334)
	network.Server.readBytes(Server.java:54)
	gc.GCSignal.receive(GCSignal.java:81)
	ot.OTExtReceiver.reverseAndExtend(OTExtReceiver.java:125)
	ot.OTExtSender.send(OTExtSender.java:93)
TRACE 300307:
	ot.Cipher.getPadding(Cipher.java:92)
	ot.Cipher.enc(Cipher.java:84)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:146)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
TRACE 300273:
	sun.security.provider.SHA.implDigest(SHA.java:98)
	sun.security.provider.DigestBase.engineDigest(DigestBase.java:173)
	sun.security.provider.DigestBase.engineDigest(DigestBase.java:152)
	java.security.MessageDigest$Delegate.engineDigest(MessageDigest.java:576)
	java.security.MessageDigest.digest(MessageDigest.java:353)
	ot.Cipher.getPaddingOfLength(Cipher.java:48)
	ot.Cipher.decrypt(Cipher.java:36)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:118)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
TRACE 300278:
	sun.security.provider.SHA.implDigest(SHA.java:98)
	sun.security.provider.DigestBase.engineDigest(DigestBase.java:173)
	sun.security.provider.DigestBase.engineDigest(DigestBase.java:152)
	java.security.MessageDigest$Delegate.engineDigest(MessageDigest.java:576)
	java.security.MessageDigest.digest(MessageDigest.java:353)
	ot.Cipher.getPaddingOfLength(Cipher.java:48)
	ot.Cipher.decrypt(Cipher.java:36)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:122)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
TRACE 300276:
	java.net.SocketInputStream.socketRead0(SocketInputStream.java:Unknown line)
	java.net.SocketInputStream.read(SocketInputStream.java:152)
	java.net.SocketInputStream.read(SocketInputStream.java:122)
	java.io.BufferedInputStream.fill(BufferedInputStream.java:235)
	java.io.BufferedInputStream.read1(BufferedInputStream.java:275)
	java.io.BufferedInputStream.read(BufferedInputStream.java:334)
	network.Server.readBytes(Server.java:54)
	network.Server.readBytes(Server.java:65)
	network.RWBigInteger.readBI(RWBigInteger.java:26)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:113)
TRACE 300301:
	ot.Cipher.getPadding(Cipher.java:92)
	ot.Cipher.enc(Cipher.java:84)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:149)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
TRACE 300320:
	java.math.BigInteger.intLength(BigInteger.java:2994)
	java.math.BigInteger.setBit(BigInteger.java:2298)
	ot.BitMatrix.NaiveTranspose(BitMatrix.java:54)
	ot.BitMatrix.transpose(BitMatrix.java:28)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:140)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
TRACE 300302:
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:146)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300257:
	rand.ISAACEngine.numberOfLeadingZeros(ISAACEngine.java:143)
	rand.ISAACEngine.toByteArray(ISAACEngine.java:119)
	rand.ISAACEngine.engineNextBytes(ISAACEngine.java:72)
	java.security.SecureRandom.nextBytes(SecureRandom.java:455)
	gc.GCSignal.freshLabel(GCSignal.java:30)
	gc.GCGenComp.genPair(GCGenComp.java:55)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:39)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
TRACE 300305:
	sun.security.provider.SHA.implCompress(SHA.java:117)
	sun.security.provider.SHA.implDigest(SHA.java:98)
	sun.security.provider.DigestBase.engineDigest(DigestBase.java:173)
	sun.security.provider.DigestBase.engineDigest(DigestBase.java:152)
	java.security.MessageDigest$Delegate.engineDigest(MessageDigest.java:576)
	java.security.MessageDigest.digest(MessageDigest.java:353)
	ot.Cipher.getPadding(Cipher.java:94)
	ot.Cipher.enc(Cipher.java:84)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:149)
	ot.OTExtSender.send(OTExtSender.java:85)
TRACE 300297:
	sun.security.provider.SHA.implCompress(SHA.java:117)
	sun.security.provider.SHA.implDigest(SHA.java:98)
	sun.security.provider.DigestBase.engineDigest(DigestBase.java:173)
	sun.security.provider.DigestBase.engineDigest(DigestBase.java:152)
	java.security.MessageDigest$Delegate.engineDigest(MessageDigest.java:576)
	java.security.MessageDigest.digest(MessageDigest.java:353)
	ot.Cipher.getPadding(Cipher.java:94)
	ot.Cipher.enc(Cipher.java:84)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:146)
	ot.OTExtSender.send(OTExtSender.java:85)
TRACE 300310:
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:149)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300316:
	java.net.SocketInputStream.socketRead0(SocketInputStream.java:Unknown line)
	java.net.SocketInputStream.read(SocketInputStream.java:152)
	java.net.SocketInputStream.read(SocketInputStream.java:122)
	java.io.BufferedInputStream.fill(BufferedInputStream.java:235)
	java.io.BufferedInputStream.read1(BufferedInputStream.java:275)
	java.io.BufferedInputStream.read(BufferedInputStream.java:334)
	network.Server.readBytes(Server.java:54)
	network.Server.readBytes(Server.java:65)
	network.RWBigInteger.readBI(RWBigInteger.java:26)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:112)
TRACE 300304:
	java.math.BigInteger.bitLength(BigInteger.java:2404)
	java.math.BigInteger.toByteArray(BigInteger.java:2704)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:146)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
TRACE 300216:
	java.io.FileInputStream.readBytes(FileInputStream.java:Unknown line)
	java.io.FileInputStream.read(FileInputStream.java:243)
	gc.offline.FileReader.<init>(FileReader.java:17)
	gc.offline.GCGen.<clinit>(GCGen.java:26)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300255:
	rand.ISAACEngine.engineNextBytes(ISAACEngine.java:78)
	java.security.SecureRandom.nextBytes(SecureRandom.java:455)
	gc.GCSignal.freshLabel(GCSignal.java:30)
	gc.GCGenComp.genPair(GCGenComp.java:55)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:39)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
TRACE 300300:
	java.math.BigInteger.valueOf(BigInteger.java:988)
	java.math.BigInteger.xor(BigInteger.java:2230)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:149)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
TRACE 300458:
	java.io.BufferedInputStream.read(BufferedInputStream.java:334)
	network.Server.readBytes(Server.java:54)
	gc.GCSignal.receive(GCSignal.java:81)
	gc.GCGenComp.outputToAlice(GCGenComp.java:129)
	gc.GCGenComp.outputToAlice(GCGenComp.java:167)
	gc.GCGenComp.outputToAlice(GCGenComp.java:16)
	orambs.OramParty.outputBlock(OramParty.java:161)
	orambs.OramParty.outputBucket(OramParty.java:170)
	orambs.OramParty.outputBuckets(OramParty.java:177)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:124)
TRACE 300325:
	ot.Cipher.getPadding(Cipher.java:93)
	ot.Cipher.enc(Cipher.java:84)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:149)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
TRACE 300274:
	java.math.BigInteger.<init>(BigInteger.java:196)
	network.RWBigInteger.readBI(RWBigInteger.java:35)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:113)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
TRACE 300256:
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:39)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300258:
	ot.OTExtSender.send(OTExtSender.java:73)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300287:
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:144)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300275:
	sun.security.provider.SHA.implCompress(SHA.java:117)
	sun.security.provider.SHA.implDigest(SHA.java:98)
	sun.security.provider.DigestBase.engineDigest(DigestBase.java:173)
	sun.security.provider.DigestBase.engineDigest(DigestBase.java:152)
	java.security.MessageDigest$Delegate.engineDigest(MessageDigest.java:576)
	java.security.MessageDigest.digest(MessageDigest.java:353)
	ot.Cipher.getPaddingOfLength(Cipher.java:48)
	ot.Cipher.decrypt(Cipher.java:36)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:118)
	ot.OTExtSender.send(OTExtSender.java:85)
TRACE 300332:
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:103)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300318:
	java.math.BigInteger.<init>(BigInteger.java:196)
	network.RWBigInteger.readBI(RWBigInteger.java:35)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:112)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
TRACE 300308:
	ot.Cipher.getPadding(Cipher.java:93)
	ot.Cipher.enc(Cipher.java:84)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:146)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
TRACE 300327:
	sun.security.provider.SHA.implCompress(SHA.java:117)
	sun.security.provider.SHA.implDigest(SHA.java:98)
	sun.security.provider.DigestBase.engineDigest(DigestBase.java:173)
	sun.security.provider.DigestBase.engineDigest(DigestBase.java:152)
	java.security.MessageDigest$Delegate.engineDigest(MessageDigest.java:576)
	java.security.MessageDigest.digest(MessageDigest.java:353)
	ot.Cipher.getPaddingOfLength(Cipher.java:48)
	ot.Cipher.decrypt(Cipher.java:36)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:122)
	ot.OTExtSender.send(OTExtSender.java:85)
TRACE 300331:
	java.math.BigInteger.<init>(BigInteger.java:237)
	ot.Cipher.getPaddingOfLength(Cipher.java:53)
	ot.Cipher.decrypt(Cipher.java:36)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:122)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
TRACE 300309:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:153)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300311:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:154)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300456:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:79)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300444:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:79)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300481:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:83)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300254:
	rand.ISAACAlgorithm.nextInt(ISAACAlgorithm.java:245)
	rand.ISAACEngine.engineNextBytes(ISAACEngine.java:72)
	java.security.SecureRandom.nextBytes(SecureRandom.java:455)
	gc.GCSignal.freshLabel(GCSignal.java:30)
	gc.GCGenComp.genPair(GCGenComp.java:55)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:39)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
TRACE 300485:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:83)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300521:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:83)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300279:
	java.math.BigInteger.<init>(BigInteger.java:237)
	ot.Cipher.getPaddingOfLength(Cipher.java:53)
	ot.Cipher.decrypt(Cipher.java:36)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:118)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
TRACE 300428:
	java.net.SocketOutputStream.socketWrite0(SocketOutputStream.java:Unknown line)
	java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:113)
	java.net.SocketOutputStream.write(SocketOutputStream.java:159)
	java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)
	java.io.BufferedOutputStream.write(BufferedOutputStream.java:126)
	java.io.FilterOutputStream.write(FilterOutputStream.java:97)
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:123)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
TRACE 300466:
	gc.GCGenComp.inputOfBob(GCGenComp.java:103)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:83)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300482:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:79)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300329:
	java.math.BigInteger.valueOf(BigInteger.java:988)
	java.math.BigInteger.xor(BigInteger.java:2230)
	ot.Cipher.decrypt(Cipher.java:36)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:118)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
TRACE 300422:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.readAndRemove(BucketLib.java:57)
	orambs.noOTORAM.CircuitOramNOOT.readAndRemove(CircuitOramNOOT.java:70)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:112)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:108)
TRACE 300468:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:79)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:83)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300604:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalAdd(BucketLib.java:89)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:203)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:64)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
TRACE 300476:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:196)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:64)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
TRACE 300526:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:84)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300544:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:80)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300558:
	java.net.SocketOutputStream.socketWrite0(SocketOutputStream.java:Unknown line)
	java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:113)
	java.net.SocketOutputStream.write(SocketOutputStream.java:159)
	java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)
	java.io.BufferedOutputStream.write(BufferedOutputStream.java:126)
	java.io.FilterOutputStream.write(FilterOutputStream.java:97)
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:124)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
TRACE 300338:
	java.math.BigInteger.valueOf(BigInteger.java:988)
	java.math.BigInteger.xor(BigInteger.java:2230)
	ot.Cipher.decrypt(Cipher.java:36)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:122)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
TRACE 300451:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:79)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300459:
	gc.GCGenComp.inputOfBob(GCGenComp.java:103)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:77)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300460:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:83)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:77)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300464:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.readAndRemove(BucketLib.java:57)
	orambs.BucketLib.readAndRemove(BucketLib.java:74)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:79)
	orambs.CircuitOram.write(CircuitOram.java:114)
TRACE 300470:
	gc.GCGenComp.inputOfBob(GCGenComp.java:103)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300500:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.readAndRemove(BucketLib.java:57)
	orambs.noOTORAM.BucketLib.readAndRemove(BucketLib.java:74)
	orambs.noOTORAM.CircuitOramNOOT.readAndRemove(CircuitOramNOOT.java:69)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:112)
TRACE 300581:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:83)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300303:
	java.net.SocketOutputStream.socketWrite0(SocketOutputStream.java:Unknown line)
	java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:113)
	java.net.SocketOutputStream.write(SocketOutputStream.java:159)
	java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)
	java.io.BufferedOutputStream.write(BufferedOutputStream.java:126)
	java.io.FilterOutputStream.write(FilterOutputStream.java:97)
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:153)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
TRACE 300499:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.conditionalAdd(BucketLib.java:89)
	orambs.noOTORAM.CircuitOramLib.flush(CircuitOramLib.java:203)
	orambs.noOTORAM.CircuitOramNOOT.flushOneTime(CircuitOramNOOT.java:61)
	orambs.noOTORAM.CircuitOramNOOT.ControlEviction(CircuitOramNOOT.java:55)
TRACE 300506:
	java.net.SocketOutputStream.socketWrite0(SocketOutputStream.java:Unknown line)
	java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:113)
	java.net.SocketOutputStream.write(SocketOutputStream.java:159)
	java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)
	java.io.BufferedOutputStream.write(BufferedOutputStream.java:126)
	java.io.FilterOutputStream.write(FilterOutputStream.java:97)
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:122)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
TRACE 300729:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:80)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300322:
	java.math.BigInteger.xor(BigInteger.java:2225)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:149)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300319:
	ot.Cipher.getPaddingOfLength(Cipher.java:47)
	ot.Cipher.decrypt(Cipher.java:36)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:122)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
TRACE 300493:
	gc.GCGenComp.inputOfBob(GCGenComp.java:103)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300498:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.noOTORAM.CircuitOramLib.flush(CircuitOramLib.java:178)
	orambs.noOTORAM.CircuitOramNOOT.flushOneTime(CircuitOramNOOT.java:61)
	orambs.noOTORAM.CircuitOramNOOT.ControlEviction(CircuitOramNOOT.java:55)
TRACE 300675:
	java.net.SocketInputStream.socketRead0(SocketInputStream.java:Unknown line)
	java.net.SocketInputStream.read(SocketInputStream.java:152)
	java.net.SocketInputStream.read(SocketInputStream.java:122)
	java.io.BufferedInputStream.fill(BufferedInputStream.java:235)
	java.io.BufferedInputStream.read1(BufferedInputStream.java:275)
	java.io.BufferedInputStream.read(BufferedInputStream.java:334)
	network.Server.readBytes(Server.java:54)
	gc.GCSignal.receive(GCSignal.java:81)
	gc.GCGenComp.outputToAlice(GCGenComp.java:129)
	gc.GCGenComp.outputToAlice(GCGenComp.java:16)
TRACE 300430:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.add(BucketLib.java:104)
	orambs.noOTORAM.CircuitOramNOOT.putBack(CircuitOramNOOT.java:84)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:108)
TRACE 300462:
	gc.GCGenComp.inputOfAlice(GCGenComp.java:86)
	gc.GCGenComp.inputOfAlice(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfClient(OramParty.java:152)
	orambs.TreeBasedOramParty.inputPathOfClient(TreeBasedOramParty.java:79)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:64)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:77)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300480:
	gc.GCGenComp.inputOfBob(GCGenComp.java:103)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300487:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.xor(CircuitLib.java:160)
	orambs.BucketLib.xor(BucketLib.java:148)
	orambs.BucketLib.xor(BucketLib.java:167)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:65)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300530:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:84)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300248:
	java.net.SocketInputStream.socketRead0(SocketInputStream.java:Unknown line)
	java.net.SocketInputStream.read(SocketInputStream.java:152)
	java.net.SocketInputStream.read(SocketInputStream.java:122)
	java.io.BufferedInputStream.fill(BufferedInputStream.java:235)
	java.io.BufferedInputStream.read1(BufferedInputStream.java:275)
	java.io.BufferedInputStream.read(BufferedInputStream.java:334)
	network.Server.readBytes(Server.java:54)
	network.Server.readBytes(Server.java:63)
	network.RWBigInteger.readBI(RWBigInteger.java:26)
	ot.NPOTReceiver.step2(NPOTReceiver.java:99)
TRACE 300336:
	ot.Cipher.getPadding(Cipher.java:94)
	ot.Cipher.enc(Cipher.java:84)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:149)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
TRACE 300337:
	ot.Cipher.getPaddingOfLength(Cipher.java:47)
	ot.Cipher.decrypt(Cipher.java:36)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:118)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
TRACE 300463:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.xor(CircuitLib.java:160)
	orambs.BucketLib.xor(BucketLib.java:148)
	orambs.BucketLib.xor(BucketLib.java:167)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:65)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:77)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300472:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:84)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300515:
	gc.GCGenComp.inputOfBob(GCGenComp.java:103)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:77)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:112)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300454:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:196)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:64)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
TRACE 300473:
	gc.GCGenComp.inputOfAlice(GCGenComp.java:86)
	gc.GCGenComp.inputOfAlice(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfClient(OramParty.java:152)
	orambs.TreeBasedOramParty.inputPathOfClient(TreeBasedOramParty.java:79)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:64)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300474:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.xor(CircuitLib.java:160)
	orambs.BucketLib.xor(BucketLib.java:148)
	orambs.BucketLib.xor(BucketLib.java:167)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:65)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300484:
	gc.GCGenComp.inputOfBob(GCGenComp.java:103)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300524:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalAdd(BucketLib.java:89)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:203)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:64)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
TRACE 300528:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:122)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalAdd(BucketLib.java:89)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:203)
TRACE 300534:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:80)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:83)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300552:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:124)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.noOTORAM.CircuitOramLib.flush(CircuitOramLib.java:178)
TRACE 300467:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:84)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:83)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300471:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:80)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300483:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.xor(CircuitLib.java:160)
	orambs.BucketLib.xor(BucketLib.java:148)
	orambs.BucketLib.xor(BucketLib.java:167)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:124)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300491:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:198)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:64)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300507:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.readAndRemove(BucketLib.java:57)
	orambs.noOTORAM.BucketLib.readAndRemove(BucketLib.java:74)
	orambs.noOTORAM.CircuitOramNOOT.readAndRemove(CircuitOramNOOT.java:69)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:112)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:108)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:108)
TRACE 300546:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:80)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300583:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:79)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:77)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300589:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:83)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:83)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300650:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:124)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:196)
TRACE 300465:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.readAndRemove(BucketLib.java:57)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:80)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300486:
	gc.GCGenComp.inputOfAlice(GCGenComp.java:86)
	gc.GCGenComp.inputOfAlice(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfClient(OramParty.java:152)
	orambs.TreeBasedOramParty.inputPathOfClient(TreeBasedOramParty.java:79)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:64)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300513:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.noOTORAM.CircuitOramLib.flush(CircuitOramLib.java:196)
	orambs.noOTORAM.CircuitOramNOOT.flushOneTime(CircuitOramNOOT.java:61)
	orambs.noOTORAM.CircuitOramNOOT.ControlEviction(CircuitOramNOOT.java:55)
TRACE 300306:
	java.math.BigInteger.bitLength(BigInteger.java:2404)
	java.math.BigInteger.toByteArray(BigInteger.java:2704)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:149)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
TRACE 300333:
	gc.GCGenComp.genPair(GCGenComp.java:55)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:39)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300435:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.conditionalAdd(BucketLib.java:89)
	orambs.noOTORAM.CircuitOramLib.flush(CircuitOramLib.java:203)
	orambs.noOTORAM.CircuitOramNOOT.flushOneTime(CircuitOramNOOT.java:61)
	orambs.noOTORAM.CircuitOramNOOT.ControlEviction(CircuitOramNOOT.java:56)
TRACE 300523:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:178)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:64)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
TRACE 300525:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:123)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalAdd(BucketLib.java:89)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:203)
TRACE 300562:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:124)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.conditionalAdd(BucketLib.java:89)
	orambs.noOTORAM.CircuitOramLib.flush(CircuitOramLib.java:203)
TRACE 300620:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.noOTORAM.CircuitOramLib.flush(CircuitOramLib.java:196)
	orambs.noOTORAM.CircuitOramNOOT.flushOneTime(CircuitOramNOOT.java:61)
	orambs.noOTORAM.CircuitOramNOOT.ControlEviction(CircuitOramNOOT.java:56)
	orambs.noOTORAM.CircuitOramNOOT.putBack(CircuitOramNOOT.java:87)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
TRACE 300682:
	gc.GCGenComp.inputOfAlice(GCGenComp.java:89)
	gc.GCGenComp.inputOfAlice(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfClient(OramParty.java:152)
	orambs.TreeBasedOramParty.inputPathOfClient(TreeBasedOramParty.java:79)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:64)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300450:
	gc.GCGenComp.inputOfBob(GCGenComp.java:103)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300547:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:178)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:64)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
TRACE 300569:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:83)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:83)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:112)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300600:
	gc.GCGenComp.inputOfBob(GCGenComp.java:105)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300759:
	gc.GCGenComp.inputOfBob(GCGenComp.java:103)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300440:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:79)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:83)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:112)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300494:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.xor(CircuitLib.java:160)
	orambs.BucketLib.xor(BucketLib.java:148)
	orambs.BucketLib.xor(BucketLib.java:167)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:124)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300538:
	gc.GCGenComp.inputOfAlice(GCGenComp.java:89)
	gc.GCGenComp.inputOfAlice(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfClient(OramParty.java:152)
	orambs.TreeBasedOramParty.inputPathOfClient(TreeBasedOramParty.java:79)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:64)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300542:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:124)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalAdd(BucketLib.java:89)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:203)
TRACE 300560:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:123)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.readAndRemove(BucketLib.java:57)
	orambs.noOTORAM.BucketLib.readAndRemove(BucketLib.java:74)
TRACE 300575:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:84)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300612:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.add(BucketLib.java:104)
	orambs.noOTORAM.CircuitOramNOOT.putBack(CircuitOramNOOT.java:84)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:108)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:108)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:108)
TRACE 300330:
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:38)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300342:
	java.math.BigInteger.toByteArray(BigInteger.java:2704)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:146)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300348:
	java.lang.System.arraycopy(System.java:Unknown line)
	java.io.BufferedInputStream.read1(BufferedInputStream.java:280)
	java.io.BufferedInputStream.read(BufferedInputStream.java:334)
	network.Server.readBytes(Server.java:54)
	network.Server.readBytes(Server.java:63)
	network.RWBigInteger.readBI(RWBigInteger.java:26)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:112)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
TRACE 300356:
	java.math.BigInteger.xor(BigInteger.java:2225)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:149)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300477:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:122)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:196)
TRACE 300478:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalAdd(BucketLib.java:89)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:203)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:64)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
TRACE 300489:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:196)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:64)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
TRACE 300511:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:124)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.readAndRemove(BucketLib.java:57)
	orambs.noOTORAM.BucketLib.readAndRemove(BucketLib.java:74)
TRACE 300536:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.add(BucketLib.java:104)
	orambs.CircuitOram.putBack(CircuitOram.java:99)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300543:
	gc.GCGenComp.inputOfBob(GCGenComp.java:105)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300553:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:124)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.noOTORAM.CircuitOramLib.flush(CircuitOramLib.java:196)
TRACE 300559:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.conditionalAdd(BucketLib.java:89)
	orambs.noOTORAM.CircuitOramLib.flush(CircuitOramLib.java:203)
	orambs.noOTORAM.CircuitOramNOOT.flushOneTime(CircuitOramNOOT.java:61)
	orambs.noOTORAM.CircuitOramNOOT.ControlEviction(CircuitOramNOOT.java:55)
	orambs.noOTORAM.CircuitOramNOOT.putBack(CircuitOramNOOT.java:87)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
TRACE 300591:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.add(BucketLib.java:104)
	orambs.CircuitOram.putBack(CircuitOram.java:99)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300632:
	gc.GCGenComp.inputOfBob(GCGenComp.java:105)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300633:
	gc.GCGenComp.inputOfAlice(GCGenComp.java:86)
	gc.GCGenComp.inputOfAlice(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfClient(OramParty.java:152)
	orambs.TreeBasedOramParty.inputPathOfClient(TreeBasedOramParty.java:79)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:64)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300635:
	gc.GCGenComp.inputOfBob(GCGenComp.java:105)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300642:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:80)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:77)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300324:
	ot.Cipher.getPadding(Cipher.java:94)
	ot.Cipher.enc(Cipher.java:84)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:146)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
TRACE 300346:
	java.lang.System.arraycopy(System.java:Unknown line)
	java.io.BufferedInputStream.read1(BufferedInputStream.java:280)
	java.io.BufferedInputStream.read(BufferedInputStream.java:334)
	network.Server.readBytes(Server.java:54)
	network.Server.readBytes(Server.java:63)
	network.RWBigInteger.readBI(RWBigInteger.java:26)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:113)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
TRACE 300354:
	java.lang.System.arraycopy(System.java:Unknown line)
	java.io.BufferedInputStream.read1(BufferedInputStream.java:280)
	java.io.BufferedInputStream.read(BufferedInputStream.java:334)
	network.Server.readBytes(Server.java:54)
	network.Server.readBytes(Server.java:65)
	network.RWBigInteger.readBI(RWBigInteger.java:26)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:112)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
TRACE 300436:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:83)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:77)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:112)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300461:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:84)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:77)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300504:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:123)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.noOTORAM.CircuitOramLib.flush(CircuitOramLib.java:178)
TRACE 300529:
	gc.GCGenComp.inputOfBob(GCGenComp.java:103)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300531:
	gc.GCGenComp.inputOfAlice(GCGenComp.java:89)
	gc.GCGenComp.inputOfAlice(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfClient(OramParty.java:152)
	orambs.TreeBasedOramParty.inputPathOfClient(TreeBasedOramParty.java:79)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:64)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:77)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300603:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:123)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:178)
TRACE 300652:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:123)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:196)
TRACE 300660:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.noOTORAM.CircuitOramLib.flush(CircuitOramLib.java:196)
	orambs.noOTORAM.CircuitOramNOOT.flushOneTime(CircuitOramNOOT.java:61)
	orambs.noOTORAM.CircuitOramNOOT.ControlEviction(CircuitOramNOOT.java:56)
TRACE 300696:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:122)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.conditionalAdd(BucketLib.java:89)
	orambs.noOTORAM.CircuitOramLib.flush(CircuitOramLib.java:203)
TRACE 300718:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.add(BucketLib.java:104)
	orambs.noOTORAM.CircuitOramNOOT.putBack(CircuitOramNOOT.java:84)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:108)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:108)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300738:
	gc.GCGenComp.inputOfBob(GCGenComp.java:105)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300805:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:122)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.noOTORAM.CircuitOramLib.flush(CircuitOramLib.java:178)
TRACE 300351:
	java.lang.System.arraycopy(System.java:Unknown line)
	java.io.BufferedInputStream.read1(BufferedInputStream.java:280)
	java.io.BufferedInputStream.read(BufferedInputStream.java:334)
	network.Server.readBytes(Server.java:54)
	network.Server.readBytes(Server.java:65)
	network.RWBigInteger.readBI(RWBigInteger.java:26)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:113)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
TRACE 300415:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.readAndRemove(BucketLib.java:57)
	orambs.noOTORAM.CircuitOramNOOT.readAndRemove(CircuitOramNOOT.java:70)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:112)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:108)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:108)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:108)
TRACE 300437:
	gc.GCGenComp.inputOfAlice(GCGenComp.java:86)
	gc.GCGenComp.inputOfAlice(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfClient(OramParty.java:152)
	orambs.TreeBasedOramParty.inputPathOfClient(TreeBasedOramParty.java:79)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:64)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:77)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:112)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300448:
	gc.GCGenComp.inputOfBob(GCGenComp.java:103)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300516:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:79)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:77)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:112)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300522:
	gc.GCGenComp.inputOfAlice(GCGenComp.java:89)
	gc.GCGenComp.inputOfAlice(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfClient(OramParty.java:152)
	orambs.TreeBasedOramParty.inputPathOfClient(TreeBasedOramParty.java:79)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:64)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300541:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:198)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:64)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
TRACE 300571:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.add(BucketLib.java:104)
	orambs.CircuitOram.putBack(CircuitOram.java:99)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300576:
	gc.GCGenComp.inputOfAlice(GCGenComp.java:86)
	gc.GCGenComp.inputOfAlice(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfClient(OramParty.java:152)
	orambs.TreeBasedOramParty.inputPathOfClient(TreeBasedOramParty.java:79)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:64)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300594:
	java.net.SocketOutputStream.socketWrite0(SocketOutputStream.java:Unknown line)
	java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:113)
	java.net.SocketOutputStream.write(SocketOutputStream.java:159)
	java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)
	java.io.BufferedOutputStream.write(BufferedOutputStream.java:126)
	java.io.FilterOutputStream.write(FilterOutputStream.java:97)
	gc.GCSignal.send(GCSignal.java:71)
	gc.GCGenComp.inputOfAlice(GCGenComp.java:94)
	gc.GCGenComp.inputOfAlice(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfClient(OramParty.java:152)
TRACE 300622:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.readAndRemove(BucketLib.java:57)
	orambs.noOTORAM.BucketLib.readAndRemove(BucketLib.java:75)
	orambs.noOTORAM.CircuitOramNOOT.readAndRemove(CircuitOramNOOT.java:69)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:112)
TRACE 300638:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:178)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:64)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
TRACE 300641:
	gc.GCGenComp.inputOfBob(GCGenComp.java:105)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300678:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:124)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.readAndRemove(BucketLib.java:57)
	orambs.BucketLib.readAndRemove(BucketLib.java:74)
TRACE 300702:
	gc.GCGenComp.inputOfBob(GCGenComp.java:103)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:83)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:112)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300712:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.noOTORAM.CircuitOramLib.flush(CircuitOramLib.java:178)
	orambs.noOTORAM.CircuitOramNOOT.flushOneTime(CircuitOramNOOT.java:61)
	orambs.noOTORAM.CircuitOramNOOT.ControlEviction(CircuitOramNOOT.java:55)
	orambs.noOTORAM.CircuitOramNOOT.putBack(CircuitOramNOOT.java:87)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
TRACE 300358:
	ot.Cipher.getPaddingOfLength(Cipher.java:48)
	ot.Cipher.decrypt(Cipher.java:36)
	ot.OTExtSender.reverseAndExtend(OTExtSender.java:122)
	ot.OTExtSender.send(OTExtSender.java:85)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:41)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
TRACE 300377:
	orambs.TreeBasedOramParty.<init>(TreeBasedOramParty.java:21)
	orambs.CircuitOram.<init>(CircuitOram.java:29)
	orambs.BSCircuitOram.init(BSCircuitOram.java:49)
	orambs.BSCircuitOram.<init>(BSCircuitOram.java:31)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:75)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300488:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:122)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:178)
TRACE 300509:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:123)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.conditionalAdd(BucketLib.java:89)
	orambs.noOTORAM.CircuitOramLib.flush(CircuitOramLib.java:203)
TRACE 300519:
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:84)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:83)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:112)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300535:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.xor(CircuitLib.java:160)
	orambs.BucketLib.xor(BucketLib.java:148)
	orambs.BucketLib.xor(BucketLib.java:167)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:124)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:83)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300540:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:178)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:64)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
TRACE 300545:
	java.net.SocketOutputStream.socketWrite0(SocketOutputStream.java:Unknown line)
	java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:113)
	java.net.SocketOutputStream.write(SocketOutputStream.java:159)
	java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)
	java.io.BufferedOutputStream.write(BufferedOutputStream.java:126)
	java.io.FilterOutputStream.write(FilterOutputStream.java:97)
	gc.GCSignal.send(GCSignal.java:71)
	ot.OTPreprocessSender.send(OTPreprocessSender.java:79)
	gc.GCGenComp.inputOfBob(GCGenComp.java:107)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
TRACE 300585:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.readAndRemove(BucketLib.java:57)
	orambs.BucketLib.readAndRemove(BucketLib.java:74)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:79)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
TRACE 300593:
	gc.GCGenComp.inputOfBob(GCGenComp.java:105)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
TRACE 300597:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:196)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:64)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
TRACE 300605:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.conditionalAdd(BucketLib.java:89)
	orambs.CircuitOramLib.flush(CircuitOramLib.java:203)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:64)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.CircuitOram.write(CircuitOram.java:115)
TRACE 300618:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:122)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.noOTORAM.CircuitOramLib.flush(CircuitOramLib.java:196)
TRACE 300631:
	gc.GCGenComp.inputOfBob(GCGenComp.java:105)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:83)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:112)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300676:
	gc.GCGenComp.inputOfBob(GCGenComp.java:105)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:63)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:77)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300698:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.add(BucketLib.java:104)
	orambs.noOTORAM.CircuitOramNOOT.putBack(CircuitOramNOOT.java:84)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:108)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
TRACE 300780:
	java.net.SocketOutputStream.socketWrite0(SocketOutputStream.java:Unknown line)
	java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:113)
	java.net.SocketOutputStream.write(SocketOutputStream.java:159)
	java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)
	java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140)
	flexsc.CompEnv.flush(CompEnv.java:151)
	gc.GCGenComp.outputToAlice(GCGenComp.java:124)
	gc.GCGenComp.outputToAlice(GCGenComp.java:167)
	gc.GCGenComp.outputToAlice(GCGenComp.java:16)
	orambs.OramParty.outputBlock(OramParty.java:159)
TRACE 300313:
	java.security.SecureRandom.nextBytes(SecureRandom.java:455)
	gc.GCSignal.freshLabel(GCSignal.java:30)
	gc.GCGenComp.genPair(GCGenComp.java:55)
	ot.OTPreprocessSender.fillup(OTPreprocessSender.java:39)
	ot.OTPreprocessSender.<init>(OTPreprocessSender.java:21)
	gc.GCGenComp.<init>(GCGenComp.java:33)
	gc.offline.GCGen.<init>(GCGen.java:41)
	flexsc.CompEnv.getEnv(CompEnv.java:50)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:73)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300423:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:122)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.add(BucketLib.java:104)
	orambs.noOTORAM.CircuitOramNOOT.putBack(CircuitOramNOOT.java:84)
TRACE 300452:
	gc.GCGenComp.inputOfAlice(GCGenComp.java:89)
	gc.GCGenComp.inputOfAlice(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfClient(OramParty.java:152)
	orambs.TreeBasedOramParty.inputPathOfClient(TreeBasedOramParty.java:79)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:64)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:62)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:57)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300520:
	gc.offline.GCGen.and(GCGen.java:145)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.add(BucketLib.java:104)
	orambs.CircuitOram.putBack(CircuitOram.java:99)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300644:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.readAndRemove(BucketLib.java:57)
	orambs.BucketLib.readAndRemove(BucketLib.java:75)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:79)
	orambs.CircuitOram.write(CircuitOram.java:114)
	orambs.BSCircuitOram.write(BSCircuitOram.java:87)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
TRACE 300663:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:205)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.conditionalReadAndRemove(BucketLib.java:46)
	orambs.noOTORAM.CircuitOramLib.flush(CircuitOramLib.java:196)
	orambs.noOTORAM.CircuitOramNOOT.flushOneTime(CircuitOramNOOT.java:61)
	orambs.noOTORAM.CircuitOramNOOT.ControlEviction(CircuitOramNOOT.java:55)
	orambs.noOTORAM.CircuitOramNOOT.putBack(CircuitOramNOOT.java:87)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
TRACE 300670:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:123)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.readAndRemove(BucketLib.java:57)
	orambs.BucketLib.readAndRemove(BucketLib.java:74)
TRACE 300674:
	gc.GCGenComp.inputOfBob(GCGenComp.java:105)
	gc.GCGenComp.inputOfBob(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfServer(OramParty.java:145)
	orambs.TreeBasedOramParty.inputPathOfServer(TreeBasedOramParty.java:100)
	orambs.TreeBasedOramParty.preparePlainPath(TreeBasedOramParty.java:122)
	orambs.CircuitOram.flushOneTime(CircuitOram.java:66)
	orambs.CircuitOram.ControlEviction(CircuitOram.java:56)
	orambs.CircuitOram.putBack(CircuitOram.java:102)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:118)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
TRACE 300700:
	gc.GCGenComp.inputOfAlice(GCGenComp.java:89)
	gc.GCGenComp.inputOfAlice(GCGenComp.java:16)
	orambs.OramParty.inputBucketOfClient(OramParty.java:152)
	orambs.TreeBasedOramParty.inputPathOfClient(TreeBasedOramParty.java:79)
	orambs.TreeBasedOramParty.preparePath(TreeBasedOramParty.java:64)
	orambs.CircuitOram.readAndRemove(CircuitOram.java:77)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:112)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
	oram.TestCircuitOramRecOpt$GenRunnable.run(TestCircuitOramRecOpt.java:91)
	oram.TestCircuitOramRecServer.main(TestCircuitOramRecServer.java:11)
TRACE 300701:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:124)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.BucketLib.mux(BucketLib.java:140)
	orambs.BucketLib.readAndRemove(BucketLib.java:57)
	orambs.BucketLib.readAndRemove(BucketLib.java:75)
TRACE 300713:
	gc.GCSignal.send(GCSignal.java:71)
	gc.offline.GCGen.sendGTT(GCGen.java:123)
	gc.offline.GCGen.and(GCGen.java:150)
	gc.offline.GCGen.and(GCGen.java:15)
	circuits.CircuitLib.and(CircuitLib.java:136)
	circuits.CircuitLib.mux(CircuitLib.java:204)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.add(BucketLib.java:104)
	orambs.noOTORAM.CircuitOramNOOT.putBack(CircuitOramNOOT.java:84)
TRACE 300814:
	circuits.CircuitLib.xor(CircuitLib.java:152)
	circuits.CircuitLib.mux(CircuitLib.java:203)
	circuits.CircuitLib.mux(CircuitLib.java:214)
	orambs.noOTORAM.BucketLib.mux(BucketLib.java:140)
	orambs.noOTORAM.BucketLib.readAndRemove(BucketLib.java:57)
	orambs.noOTORAM.BucketLib.readAndRemove(BucketLib.java:74)
	orambs.noOTORAM.CircuitOramNOOT.readAndRemove(CircuitOramNOOT.java:69)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:112)
	orambs.BSCircuitOram.travelToDeep(BSCircuitOram.java:108)
	orambs.BSCircuitOram.write(BSCircuitOram.java:83)
CPU SAMPLES BEGIN (total = 62991) Tue Feb 17 18:00:50 2015
rank   self  accum   count trace method
   1 46.40% 46.40%   29225 300261 java.net.SocketInputStream.socketRead0
   2 14.61% 61.01%    9203 300286 java.math.BigInteger.bitLength
   3  5.30% 66.30%    3337 300281 java.math.BigInteger.getInt
   4  4.94% 71.24%    3112 300385 java.net.SocketInputStream.socketRead0
   5  3.28% 74.52%    2063 300403 java.net.SocketInputStream.socketRead0
   6  3.04% 77.56%    1918 300321 ot.BitMatrix.NaiveTranspose
   7  2.93% 80.49%    1844 300074 java.net.PlainSocketImpl.socketAccept
   8  2.71% 83.20%    1706 300285 ot.BitMatrix.NaiveTranspose
   9  1.65% 84.85%    1039 300298 sun.security.provider.SHA.implDigest
  10  1.64% 86.49%    1033 300299 sun.security.provider.SHA.implDigest
  11  0.69% 87.18%     437 300312 java.net.SocketInputStream.socketRead0
  12  0.57% 87.75%     356 300307 ot.Cipher.getPadding
  13  0.52% 88.27%     327 300273 sun.security.provider.SHA.implDigest
  14  0.51% 88.78%     322 300278 sun.security.provider.SHA.implDigest
  15  0.47% 89.25%     298 300276 java.net.SocketInputStream.socketRead0
  16  0.44% 89.69%     279 300301 ot.Cipher.getPadding
  17  0.43% 90.12%     269 300320 java.math.BigInteger.intLength
  18  0.41% 90.53%     260 300302 ot.OTExtSender.reverseAndExtend
  19  0.39% 90.92%     246 300257 rand.ISAACEngine.numberOfLeadingZeros
  20  0.28% 91.21%     179 300305 sun.security.provider.SHA.implCompress
  21  0.27% 91.47%     168 300297 sun.security.provider.SHA.implCompress
  22  0.26% 91.74%     164 300310 ot.OTExtSender.reverseAndExtend
  23  0.25% 91.99%     159 300316 java.net.SocketInputStream.socketRead0
  24  0.24% 92.23%     150 300304 java.math.BigInteger.bitLength
  25  0.20% 92.43%     129 300216 java.io.FileInputStream.readBytes
  26  0.20% 92.63%     126 300255 rand.ISAACEngine.engineNextBytes
  27  0.17% 92.81%     110 300300 java.math.BigInteger.valueOf
  28  0.16% 92.97%     102 300458 java.io.BufferedInputStream.read
  29  0.16% 93.13%     100 300325 ot.Cipher.getPadding
  30  0.13% 93.26%      83 300274 java.math.BigInteger.<init>
  31  0.12% 93.38%      77 300256 ot.OTPreprocessSender.fillup
  32  0.11% 93.49%      70 300258 ot.OTExtSender.send
  33  0.11% 93.60%      70 300287 ot.OTExtSender.reverseAndExtend
  34  0.10% 93.71%      65 300275 sun.security.provider.SHA.implCompress
  35  0.10% 93.81%      64 300332 ot.OTExtSender.reverseAndExtend
  36  0.10% 93.91%      62 300318 java.math.BigInteger.<init>
  37  0.09% 94.00%      57 300308 ot.Cipher.getPadding
  38  0.09% 94.08%      56 300327 sun.security.provider.SHA.implCompress
  39  0.08% 94.16%      50 300331 java.math.BigInteger.<init>
  40  0.08% 94.24%      49 300309 gc.GCSignal.send
  41  0.08% 94.32%      49 300311 gc.GCSignal.send
  42  0.07% 94.39%      42 300456 gc.GCSignal.send
  43  0.06% 94.45%      38 300444 gc.GCSignal.send
  44  0.06% 94.51%      38 300481 gc.GCSignal.send
  45  0.06% 94.57%      37 300254 rand.ISAACAlgorithm.nextInt
  46  0.06% 94.62%      36 300485 gc.GCSignal.send
  47  0.06% 94.68%      36 300521 gc.GCSignal.send
  48  0.06% 94.74%      35 300279 java.math.BigInteger.<init>
  49  0.05% 94.79%      32 300428 java.net.SocketOutputStream.socketWrite0
  50  0.04% 94.83%      27 300466 gc.GCGenComp.inputOfBob
  51  0.04% 94.87%      27 300482 gc.GCSignal.send
  52  0.04% 94.91%      26 300329 java.math.BigInteger.valueOf
  53  0.04% 94.95%      26 300422 gc.offline.GCGen.and
  54  0.04% 95.00%      26 300468 gc.GCSignal.send
  55  0.04% 95.04%      26 300604 gc.offline.GCGen.and
  56  0.04% 95.08%      25 300476 gc.offline.GCGen.and
  57  0.04% 95.12%      25 300526 gc.GCSignal.send
  58  0.04% 95.16%      25 300544 gc.GCSignal.send
  59  0.04% 95.20%      25 300558 java.net.SocketOutputStream.socketWrite0
  60  0.04% 95.23%      24 300338 java.math.BigInteger.valueOf
  61  0.04% 95.27%      24 300451 gc.GCSignal.send
  62  0.04% 95.31%      24 300459 gc.GCGenComp.inputOfBob
  63  0.04% 95.35%      24 300460 gc.GCSignal.send
  64  0.04% 95.39%      24 300464 gc.offline.GCGen.and
  65  0.04% 95.42%      24 300470 gc.GCGenComp.inputOfBob
  66  0.04% 95.46%      24 300500 gc.offline.GCGen.and
  67  0.04% 95.50%      24 300581 gc.GCSignal.send
  68  0.04% 95.54%      23 300303 java.net.SocketOutputStream.socketWrite0
  69  0.04% 95.57%      23 300499 gc.offline.GCGen.and
  70  0.04% 95.61%      23 300506 java.net.SocketOutputStream.socketWrite0
  71  0.04% 95.65%      23 300729 gc.GCSignal.send
  72  0.03% 95.68%      22 300322 java.math.BigInteger.xor
  73  0.03% 95.72%      21 300319 ot.Cipher.getPaddingOfLength
  74  0.03% 95.75%      21 300493 gc.GCGenComp.inputOfBob
  75  0.03% 95.78%      21 300498 gc.offline.GCGen.and
  76  0.03% 95.82%      21 300675 java.net.SocketInputStream.socketRead0
  77  0.03% 95.85%      20 300430 gc.offline.GCGen.and
  78  0.03% 95.88%      20 300462 gc.GCGenComp.inputOfAlice
  79  0.03% 95.91%      20 300480 gc.GCGenComp.inputOfBob
  80  0.03% 95.94%      20 300487 circuits.CircuitLib.xor
  81  0.03% 95.97%      20 300530 gc.GCSignal.send
  82  0.03% 96.00%      19 300248 java.net.SocketInputStream.socketRead0
  83  0.03% 96.03%      19 300336 ot.Cipher.getPadding
  84  0.03% 96.06%      19 300337 ot.Cipher.getPaddingOfLength
  85  0.03% 96.09%      19 300463 circuits.CircuitLib.xor
  86  0.03% 96.12%      19 300472 gc.GCSignal.send
  87  0.03% 96.16%      19 300515 gc.GCGenComp.inputOfBob
  88  0.03% 96.18%      18 300454 gc.offline.GCGen.and
  89  0.03% 96.21%      18 300473 gc.GCGenComp.inputOfAlice
  90  0.03% 96.24%      18 300474 circuits.CircuitLib.xor
  91  0.03% 96.27%      18 300484 gc.GCGenComp.inputOfBob
  92  0.03% 96.30%      18 300524 gc.offline.GCGen.and
  93  0.03% 96.33%      18 300528 gc.GCSignal.send
  94  0.03% 96.36%      18 300534 gc.GCSignal.send
  95  0.03% 96.38%      18 300552 gc.GCSignal.send
  96  0.03% 96.41%      17 300467 gc.GCSignal.send
  97  0.03% 96.44%      17 300471 gc.GCSignal.send
  98  0.03% 96.46%      17 300483 circuits.CircuitLib.xor
  99  0.03% 96.49%      17 300491 gc.offline.GCGen.and
 100  0.03% 96.52%      17 300507 circuits.CircuitLib.xor
 101  0.03% 96.55%      17 300546 gc.GCSignal.send
 102  0.03% 96.57%      17 300583 gc.GCSignal.send
 103  0.03% 96.60%      17 300589 gc.GCSignal.send
 104  0.03% 96.63%      17 300650 gc.GCSignal.send
 105  0.03% 96.65%      16 300465 circuits.CircuitLib.xor
 106  0.03% 96.68%      16 300486 gc.GCGenComp.inputOfAlice
 107  0.02% 96.70%      15 300513 gc.offline.GCGen.and
 108  0.02% 96.72%      14 300306 java.math.BigInteger.bitLength
 109  0.02% 96.75%      14 300333 gc.GCGenComp.genPair
 110  0.02% 96.77%      14 300435 gc.offline.GCGen.and
 111  0.02% 96.79%      14 300523 gc.offline.GCGen.and
 112  0.02% 96.81%      14 300525 gc.GCSignal.send
 113  0.02% 96.83%      14 300562 gc.GCSignal.send
 114  0.02% 96.86%      14 300620 circuits.CircuitLib.xor
 115  0.02% 96.88%      14 300682 gc.GCGenComp.inputOfAlice
 116  0.02% 96.90%      13 300450 gc.GCGenComp.inputOfBob
 117  0.02% 96.92%      13 300547 circuits.CircuitLib.xor
 118  0.02% 96.94%      13 300569 gc.GCSignal.send
 119  0.02% 96.96%      13 300600 gc.GCGenComp.inputOfBob
 120  0.02% 96.98%      13 300759 gc.GCGenComp.inputOfBob
 121  0.02% 97.00%      12 300440 gc.GCSignal.send
 122  0.02% 97.02%      12 300494 circuits.CircuitLib.xor
 123  0.02% 97.04%      12 300538 gc.GCGenComp.inputOfAlice
 124  0.02% 97.06%      12 300542 gc.GCSignal.send
 125  0.02% 97.08%      12 300560 gc.GCSignal.send
 126  0.02% 97.10%      12 300575 gc.GCSignal.send
 127  0.02% 97.12%      12 300612 circuits.CircuitLib.xor
 128  0.02% 97.13%      11 300330 ot.OTPreprocessSender.fillup
 129  0.02% 97.15%      11 300342 java.math.BigInteger.toByteArray
 130  0.02% 97.17%      11 300348 java.lang.System.arraycopy
 131  0.02% 97.19%      11 300356 java.math.BigInteger.xor
 132  0.02% 97.20%      11 300477 gc.GCSignal.send
 133  0.02% 97.22%      11 300478 circuits.CircuitLib.xor
 134  0.02% 97.24%      11 300489 circuits.CircuitLib.xor
 135  0.02% 97.26%      11 300511 gc.GCSignal.send
 136  0.02% 97.27%      11 300536 gc.offline.GCGen.and
 137  0.02% 97.29%      11 300543 gc.GCGenComp.inputOfBob
 138  0.02% 97.31%      11 300553 gc.GCSignal.send
 139  0.02% 97.33%      11 300559 circuits.CircuitLib.xor
 140  0.02% 97.34%      11 300591 circuits.CircuitLib.xor
 141  0.02% 97.36%      11 300632 gc.GCGenComp.inputOfBob
 142  0.02% 97.38%      11 300633 gc.GCGenComp.inputOfAlice
 143  0.02% 97.39%      11 300635 gc.GCGenComp.inputOfBob
 144  0.02% 97.41%      11 300642 gc.GCSignal.send
 145  0.02% 97.43%      10 300324 ot.Cipher.getPadding
 146  0.02% 97.44%      10 300346 java.lang.System.arraycopy
 147  0.02% 97.46%      10 300354 java.lang.System.arraycopy
 148  0.02% 97.48%      10 300436 gc.GCSignal.send
 149  0.02% 97.49%      10 300461 gc.GCSignal.send
 150  0.02% 97.51%      10 300504 gc.GCSignal.send
 151  0.02% 97.52%      10 300529 gc.GCGenComp.inputOfBob
 152  0.02% 97.54%      10 300531 gc.GCGenComp.inputOfAlice
 153  0.02% 97.56%      10 300603 gc.GCSignal.send
 154  0.02% 97.57%      10 300652 gc.GCSignal.send
 155  0.02% 97.59%      10 300660 gc.offline.GCGen.and
 156  0.02% 97.60%      10 300696 gc.GCSignal.send
 157  0.02% 97.62%      10 300718 circuits.CircuitLib.xor
 158  0.02% 97.63%      10 300738 gc.GCGenComp.inputOfBob
 159  0.02% 97.65%      10 300805 gc.GCSignal.send
 160  0.01% 97.66%       9 300351 java.lang.System.arraycopy
 161  0.01% 97.68%       9 300415 circuits.CircuitLib.xor
 162  0.01% 97.69%       9 300437 gc.GCGenComp.inputOfAlice
 163  0.01% 97.71%       9 300448 gc.GCGenComp.inputOfBob
 164  0.01% 97.72%       9 300516 gc.GCSignal.send
 165  0.01% 97.74%       9 300522 gc.GCGenComp.inputOfAlice
 166  0.01% 97.75%       9 300541 gc.offline.GCGen.and
 167  0.01% 97.76%       9 300571 circuits.CircuitLib.xor
 168  0.01% 97.78%       9 300576 gc.GCGenComp.inputOfAlice
 169  0.01% 97.79%       9 300594 java.net.SocketOutputStream.socketWrite0
 170  0.01% 97.81%       9 300622 gc.offline.GCGen.and
 171  0.01% 97.82%       9 300638 gc.offline.GCGen.and
 172  0.01% 97.84%       9 300641 gc.GCGenComp.inputOfBob
 173  0.01% 97.85%       9 300678 gc.GCSignal.send
 174  0.01% 97.86%       9 300702 gc.GCGenComp.inputOfBob
 175  0.01% 97.88%       9 300712 circuits.CircuitLib.xor
 176  0.01% 97.89%       8 300358 ot.Cipher.getPaddingOfLength
 177  0.01% 97.90%       8 300377 orambs.TreeBasedOramParty.<init>
 178  0.01% 97.92%       8 300488 gc.GCSignal.send
 179  0.01% 97.93%       8 300509 gc.GCSignal.send
 180  0.01% 97.94%       8 300519 gc.GCSignal.send
 181  0.01% 97.96%       8 300535 circuits.CircuitLib.xor
 182  0.01% 97.97%       8 300540 circuits.CircuitLib.xor
 183  0.01% 97.98%       8 300545 java.net.SocketOutputStream.socketWrite0
 184  0.01% 97.99%       8 300585 circuits.CircuitLib.xor
 185  0.01% 98.01%       8 300593 gc.GCGenComp.inputOfBob
 186  0.01% 98.02%       8 300597 circuits.CircuitLib.xor
 187  0.01% 98.03%       8 300605 circuits.CircuitLib.xor
 188  0.01% 98.04%       8 300618 gc.GCSignal.send
 189  0.01% 98.06%       8 300631 gc.GCGenComp.inputOfBob
 190  0.01% 98.07%       8 300676 gc.GCGenComp.inputOfBob
 191  0.01% 98.08%       8 300698 circuits.CircuitLib.xor
 192  0.01% 98.09%       8 300780 java.net.SocketOutputStream.socketWrite0
 193  0.01% 98.11%       7 300313 java.security.SecureRandom.nextBytes
 194  0.01% 98.12%       7 300423 gc.GCSignal.send
 195  0.01% 98.13%       7 300452 gc.GCGenComp.inputOfAlice
 196  0.01% 98.14%       7 300520 gc.offline.GCGen.and
 197  0.01% 98.15%       7 300644 circuits.CircuitLib.xor
 198  0.01% 98.16%       7 300663 circuits.CircuitLib.xor
 199  0.01% 98.17%       7 300670 gc.GCSignal.send
 200  0.01% 98.18%       7 300674 gc.GCGenComp.inputOfBob
 201  0.01% 98.19%       7 300700 gc.GCGenComp.inputOfAlice
 202  0.01% 98.21%       7 300701 gc.GCSignal.send
 203  0.01% 98.22%       7 300713 gc.GCSignal.send
 204  0.01% 98.23%       7 300814 circuits.CircuitLib.xor
CPU SAMPLES END
