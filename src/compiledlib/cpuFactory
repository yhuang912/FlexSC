CP='../../build/classes:../../lib/*'
CP='../../bin:../../lib/*'

# Where things go
D=..

# Binary
B="$1"
if test "X$B" = "X"
then
    B=../../SimpleBinaryReader/data/func1
fi

# First, some hacking to build an omnibus CPU

if /bin/false
then

# This is turned off because the unimplemented bits
# cause indigestion (as designed)

java -classpath $CP \
	com/appcomsci.mips.cpu.CpuBuilder \
	--class=AllCpu \
	--output.directory=$D

if test -f AllCpu.cpp
then
	sed 's+MISSING+// MISSING+' <AllCpu.cpp >dov/AllCpu.cpp
	rm AllCpu.cpp
else
	if test ! -f dov/AllCpu.cpp
	then
		echo 'AllCpu.cpp is missing'
	fi
fi

fi

# Now build a complete CPU for the binary

java -classpath $CP \
	com/appcomsci.mips.cpu.CpuBuilder \
	--class=BigCpu \
	--output.directory=$D \
	--entry.point=sfe_main \
	--function.load.list=sfe_main,func_a,func_b $B

# Now build individual CPUs

# uncomment to clean up
# better to use ant to do this: ant cleangenerated
# rm -rf $D/compiledlib/dov/*.cpp $D/compiledlib/dov/Cpu_*.java $D/compiledlib/dov/CpuImpl_*.java

java -classpath $CP \
	com.appcomsci.mips.cpu.CpuFactory \
	--output.directory=$D \
	--entry.point=sfe_main \
	--function.load.list=sfe_main,func_a,func_b $B
